MATCH(u:User)-[:FRIEND] -(f:User) RETURN u.name ,COUNT(f) AS nofriend ORDER BY nofriend DESC;

MATCH(u:User)-[:FRIEND] -(f:User);

MATCH(u:User)-[:FRIEND] -(f:User) return f.name;

MATCH(u:User)->[:FRIENDS] (p:User);

MATCH(u:User{name:"John"})-[:PS];

MATCH p=()-[:LIKES]->() RETURN p LIMIT 25;

MATCH (U:User{name:'John'}) -[:POSTED] ->(p:Post) return p.content;

MATCH (U:User{name:'John'}) -[:LIKES] -(f:User) RETURN f.name;

MATCH p=()-[:LIKES]->() RETURN p LIMIT 25;

MATCH (U:User{name:'John'}) -[:FRIEND] -(f:User) -[:POSTED] ->(p:Post) RETURN f.name,p.content;

MATCH (U:User{name:'John'}) -[:FRIEND] -(f:User) RETURN f.name;

MATCH (U:User{name:'John'}) -[:FRIEND] -(f:User);

MATCH p=()-[:FRIEND]->() RETURN p LIMIT 25;

MATCH (U:User{name:'John'}) -[:FRIEND] -(f:User) RETURN f.name;

MATCH (p:Post) RETURN p;

MATCH (n:Post) RETURN n LIMIT 25;

MATCH (u:User) RETURN u;

MATCH p=()-[:LIKES]->() RETURN p LIMIT 25;

MATCH p=()-[:FRIEND]->() RETURN p LIMIT 25;

LOAD CSV WITH HEADERS FROM "https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/relationships.csv" as row
MATCH (u1:User {userId: toInteger(row.userId1)}), (u2:User {userId: toInteger(row.userId2)})
CREATE (u1)-[:FRIEND]->(u2)
CREATE (u1)-[:LIKES]->(u2);

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/relationships.csv' AS row MATCH(u1:User{userId:toInteger(row.userId)}), (u2:User{userId:toInteger(row.userId)}) CREATE (u1) -[:FRIEND]->(u2) CREATE (u1) -[:LIKES]->(u2);

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/relationships.csv' AS row MATCH(u1:User{userId:toInteger(row.userId)}), (u2:User{userId:toInteger(row.userId)}) CREATE (u1) -[:FRIEND]->(u2) CREATE (u1) -[:LIKES]->(u2);

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/relationships.csv' AS row MATCH(u1:User{userId:toInteger(row.userId)}), (u2:User{userId:toInteger(row.userId)}) CREATE (u1) -[:FRIEND]->(u2);

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/relationships.csv' AS row;

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/relationships.csv' AS row;

MATCH p=()-[:POSTED]->() RETURN p LIMIT 25;

LOAD CSV WITH HEADERS From "https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/posts.csv" as row 
MATCH (u:User {userId:toInteger(row.userId)})
CREATE (u)-[:POSTED]->(:Post{postId:toInteger(row.postId),content:row.content,timestamp:datetime(row.timestamp)});

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/posts.csv' as row 
MATCH (u:User{userId:toInteger(row.userId)})    
CREATE (u) -[:POSTED]->(:Post{PostID:toInteger(row:PostId),content:row.content,timestamp:datetime(row.timestamp)});

MATCH (n:User) RETURN n LIMIT 25;

MATCH (n:User) RETURN n LIMIT 25;

MATCH (n:User) RETURN n LIMIT 25;

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/krishnaik06/graph-dataset/main/users_social.csv' AS row
CREATE (:User{userId:toInteger(row.userId),name:row.name,age:toInteger(row.age),city:row.city});

LOAD CSV WITH HEADERS FROM 'https://github.com/krishnaik06/graph-dataset/blob/main/users_social.csv' AS row 
CREATE(:User{UserId:toInteger(row.userID),name:row.name,age:toInteger(row.age),city:row.city});

LOAD CSV WITH HEADERS FROM 'https://github.com/krishnaik06/graph-dataset/blob/main/users_social.csv' AS row 
CREATE(:User{UserId:toInteger(row.userID),name:row.name,age:toInteger(row.age),city:row.city});

LOAD CSV WITH HEADERS FROM 'https://github.com/krishnaik06/graph-dataset/blob/main/users_social.csv' AS row 
CREATE(:User);

LOAD CSV WITH HEADERS FROM 'https://github.com/krishnaik06/graph-dataset/blob/main/users_social.csv' AS row
CREATE (:User);

LOAD CSV WITH HEADERS FROM '' AS row;

LOAD;

MATCH (x: PERSON{name:'Tarun'}) SET x.born=2003 return x;

MATCH (x: PERSON) SET x.born=1989 return x;

MATCH p=()-[:ACTED_IN]->() RETURN p LIMIT 25;

MATCH(x:PERSON{name:'Tarun'}), (y:Movie{title:"Forest Gump"}) CREATE (x)-[:ACTED_IN]->(y);

MATCH (n:PERSON) RETURN n LIMIT 25;

CREATE(x:PERSON{name:"Tarun"});

CREATE(x:PERSON(name:"Tarun"));

MATCH p=()-[:ACTED_IN]->() RETURN p LIMIT 25;

MATCH p=()-[:ACTED_IN]->() RETURN p LIMIT 25;

MATCH(x:PERSON{name:'Tom Hanks'}), (y:Movie{title:"Forest Gump"}) CREATE (x)-[:ACTED_IN]->(y);

MATCH p=()-[:ACTED_IN]->() RETURN p LIMIT 25;

MATCH p=()-[:ACTED_IN]->() RETURN p LIMIT 25;

MATCH(p:PERSON{name:'Tom Hanks'}), (m:Movie{title:"Forest Gump"}) CREATE (p)-[:ACTED_IN]->(m);

1 MATCH(n:PERSON{name:'Tom Hanks'}), (m:Movie{title:"Forest Gump"});

MATCH (p:PERSON{name: 'Tom Hanks'}), (m:Movie {title: 'Forest Gump'});

MATCH (n:PERSON) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

MATCH p=()-[:CEO]->() RETURN p LIMIT 25;

MATCH p=()-[]->() RETURN p LIMIT 25;

h;

MATCH(n:PERSON{name:'Tom Hanks'}), (m:Movie{title:"Forest Gump"}) CREATE(n)-[ACTED_IN]->(m);

MATCH(x:PERSON{name:'Tom Hanks'}), (y:Movie{title:"Forest Gump"});

MATCH (n:Movie) RETURN n LIMIT 25;

MATCH (n:PERSON) RETURN n LIMIT 25;

MATCH (n:PERSON) RETURN n LIMIT 25;

MATCH(n:PERSON{name:'Tom Hanks'}), (m:Movie{title:"Forest Gump"});

MATCH(n:PERSON{name:'Tom Hanks'}), (m:Movie{title:"Forest Gump"});

MATCH(n:PERSON{name:'Tom Hanks'});

MATCH (n:Movie) RETURN n LIMIT 25;

MATCH (n:PERSON) RETURN n LIMIT 25;

MATCH (n:PERSON) RETURN n LIMIT 25;

MATCH (n:Movie) RETURN n LIMIT 25;

CREATE(m:Movie{title:"Forest Gump",released:1994});

MATCH (n:PERSON) RETURN n LIMIT 25;

CREATE(p:PERSON{name:"Tom Hanks",born:1956});

MATCH (n:enterpreneur) RETURN n LIMIT 25;

MATCH (n:enterpreneur) RETURN n LIMIT 25;

MATCH (n:COUNTRY) RETURN n LIMIT 25;

MATCH (n:COUNTRY) RETURN n LIMIT 25;

MATCH (n:enterpreneur) RETURN n LIMIT 25;

MATCH (n:enterpreneur) RETURN n LIMIT 25;

MATCH (n:COUNTRY) RETURN n LIMIT 25;

MATCH (n:enterpreneur) RETURN n LIMIT 25;

MATCH (n:enterpreneur) RETURN n LIMIT 25;

MATCH (n:COUNTRY) RETURN n LIMIT 25;

MATCH (n:enterpreneur) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

CREATE(Ind:COUNTRY{name:"India"});

MATCH (n:enterpreneur) RETURN n LIMIT 25;

CREATE(Tarun:enterpreneur{name:"Tarun",YOB:1989,POB:"India"});

MATCH p=()-[:CEO]->() RETURN p LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

MATCH p=()-[:CEO]->() RETURN p LIMIT 25;

CREATE(node)-[r:CEO]->(node6);

MATCH (n:CEO) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

MATCH p=()-[:CEO]->() RETURN p LIMIT 25;

MATCH p=()-[]->() RETURN p LIMIT 25;

CREATE(node7)-[r:CEO]->(Tesla);

MATCH (n) RETURN n LIMIT 25;

MATCH (n:Company) RETURN n LIMIT 25;

CREATE(node6:Company{name:"TESLA"});

MATCH (n:CEO) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

MATCH(n) RETURN n LIMIT 25;

MATCH (n) 
WHERE n.name IS NOT NULL
RETURN DISTINCT "node" as entity, n.name AS name LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.name IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.name AS name LIMIT 25;

MATCH (n) 
WHERE n.visualisation IS NOT NULL
RETURN DISTINCT "node" as entity, n.visualisation AS visualisation LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.visualisation IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.visualisation AS visualisation LIMIT 25;

MATCH (n) 
WHERE n.data IS NOT NULL
RETURN DISTINCT "node" as entity, n.data AS data LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.data IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.data AS data LIMIT 25;

MATCH (n) 
WHERE n.name IS NOT NULL
RETURN DISTINCT "node" as entity, n.name AS name LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.name IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.name AS name LIMIT 25;

MATCH (n) 
WHERE n.nodes IS NOT NULL
RETURN DISTINCT "node" as entity, n.nodes AS nodes LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.nodes IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.nodes AS nodes LIMIT 25;

MATCH (n) 
WHERE n.name IS NOT NULL
RETURN DISTINCT "node" as entity, n.name AS name LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.name IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.name AS name LIMIT 25;

MATCH (n) 
WHERE n.YOB IS NOT NULL
RETURN DISTINCT "node" as entity, n.YOB AS YOB LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.YOB IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.YOB AS YOB LIMIT 25;

MATCH (n) 
WHERE n.id IS NOT NULL
RETURN DISTINCT "node" as entity, n.id AS id LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.id IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.id AS id LIMIT 25;

MATCH (n) 
WHERE n.id IS NOT NULL
RETURN DISTINCT "node" as entity, n.id AS id LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.id IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.id AS id LIMIT 25;

MATCH (n) 
WHERE n.data IS NOT NULL
RETURN DISTINCT "node" as entity, n.data AS data LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.data IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.data AS data LIMIT 25;

MATCH (n) 
WHERE n.data IS NOT NULL
RETURN DISTINCT "node" as entity, n.data AS data LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.data IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.data AS data LIMIT 25;

MATCH (n) 
WHERE n.relationships IS NOT NULL
RETURN DISTINCT "node" as entity, n.relationships AS relationships LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.relationships IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.relationships AS relationships LIMIT 25;

MATCH (n) 
WHERE n.name IS NOT NULL
RETURN DISTINCT "node" as entity, n.name AS name LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.name IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.name AS name LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

CREATE(node5: CEO{name:"Elon MUSK",YOB:1979,POB:"RSA"});

MATCH (n:EMPLOYEE) return n ;

MATCH (n:CEO:EMPLOYEE) RETURN n;

MATCH (n:CEO) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

CREATE(node4:CEO:EMPLOYEE);

MATCH(n:CEO) return n;

MATCH (n) RETURN n;

MATCH (n) RETURN n LIMIT 25;

CREATE(node3:CEO);

MATCH (n) RETURN n LIMIT 25;

CREATE(node2);

MATCH (n) return n ;

MATCH (n) RETURN n LIMIT 25;

CREATE(node1);

CREATE(node 1);

MATCH (n)
DETACH DELETE n;

Mar;

MATCH (n) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

CREATE(Tarun);

welcome;

MATCH (n)
DETACH DELETE n;

DETACH DELETE;

ATCH (n);
DETACH DELETE n;

DETACH DELETE;

DELETE n;

DELETE;

MATCHATCH (n)
DETACH DELETE n;

MATCH (n) 
WHERE n.name IS NOT NULL
RETURN DISTINCT "node" as entity, n.name AS name LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.name IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.name AS name LIMIT 25;

MATCH p=()-[]->() RETURN p LIMIT 25;

MATCH p=()-[:CEO]->() RETURN p LIMIT 25;

MATCH (n:ceo) RETURN n LIMIT 25;

MATCH p=()-[:CEO]->() RETURN p LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

CREATE(Elon)-[r:CEO]->(Tesla);

MATCH (n) RETURN n LIMIT 25;

CREATE(Tesla:Company{name:"Tesla"});

MATCH (n) 
WHERE n.name IS NOT NULL
RETURN DISTINCT "node" as entity, n.name AS name LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.name IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.name AS name LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

MATCH (n:CEO) RETURN n LIMIT 25;

CREATE(Elon:CEO{name:"elon musk",YOB:1979,POB:"SA"});

MATCH (n) RETURN n LIMIT 25;

MATCH (n:ceo) RETURN n LIMIT 25;

MATCH (n:ceo) RETURN n LIMIT 25;

MATCH (n:employee) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

MATCH (n:employee) RETURN n LIMIT 25;

MATCH (n:employee) RETURN n LIMIT 25;

CREATE(node:ceo:employee);

MATCH (n:elon) RETURN n LIMIT 25;

CREATE(node:elon);

MATCH (n) RETURN n LIMIT 25;

CREATE(node1);

MATCH (n) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

MATCH (n) 
WHERE n.style IS NOT NULL
RETURN DISTINCT "node" as entity, n.style AS style LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.style IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.style AS style LIMIT 25;

CREATE(Tesla:Company{name:"Tesla1"});

MATCH(n) return n;

MATCH(n-2) return n;

MATCH(n) return n;

MATCH(n) return n-1;

MATCH(n) return n;

MATCH (n) 
WHERE n.POB IS NOT NULL
RETURN DISTINCT "node" as entity, n.POB AS POB LIMIT 25
UNION ALL 
MATCH ()-[r]-() 
WHERE r.POB IS NOT NULL
RETURN DISTINCT "relationship" AS entity, r.POB AS POB LIMIT 25;

MATCH (n:CEO) RETURN n LIMIT 25;

CREATE(Elon:CEO{name:"elon musk",YOB:1979,POB:"SA"});

MATCH (n:employee) RETURN n LIMIT 25;

MATCH (n:CEO) RETURN n LIMIT 25;

CREATE(Elon:CEO:employee);

MATCH (n) RETURN n LIMIT 25;

MATCH (n:CEO) RETURN n LIMIT 25;

CREATE(Elon:CEO);

MATCH (n) RETURN n LIMIT 25;

MATCH (n) RETURN n LIMIT 25;

CREATE(node);